#!/bin/sh\nbbnote () {\n\techo "NOTE: $*"\n}\nbbwarn () {\n\techo "WARNING: $*"\n}\nbbfatal () {\n\techo "ERROR: $*"\n\texit 1\n}\nperform_groupadd () {\n\tlocal rootdir="$1"\n\tlocal opts="$2"\n\tlocal retries="$3"\n\tbbnote "Performing groupadd with [$opts] and $retries times of retry"\n\tlocal groupname=`echo "$opts" | awk \'{ print $NF }\'`\n\tlocal group_exists="`grep "^$groupname:" $rootdir/etc/group || true`"\n\tif test "x$group_exists" = "x"; then\n\t\tlocal count=0\n\t\twhile true; do\n\t\t\teval $PSEUDO groupadd $opts || true\n\t\t\tgroup_exists="`grep "^$groupname:" $rootdir/etc/group || true`"\n\t\t\tif test "x$group_exists" = "x"; then\n\t\t\t\tbbwarn "groupadd command did not succeed. Retrying..."\n\t\t\t\tsleep 1\n\t\t\telse\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tcount=`expr $count + 1`\n\t\t\tif test $count = $retries; then\n\t\t\t\tbbfatal "Tried running groupadd command $retries times without scucess, giving up"\n\t\t\tfi\n\t\tdone\n\telse\n\t\tbbwarn "group $groupname already exists, not re-creating it"\n\tfi\n}\nperform_useradd () {\n\tlocal rootdir="$1"\n\tlocal opts="$2"\n\tlocal retries="$3"\n\tbbnote "Performing useradd with [$opts] and $retries times of retry"\n\tlocal username=`echo "$opts" | awk \'{ print $NF }\'`\n\tlocal user_exists="`grep "^$username:" $rootdir/etc/passwd || true`"\n\tif test "x$user_exists" = "x"; then\n\t       local count=0\n\t       while true; do\n\t\t       eval $PSEUDO useradd $opts || true\n\t\t       user_exists="`grep "^$username:" $rootdir/etc/passwd || true`"\n\t\t       if test "x$user_exists" = "x"; then\n\t\t\t       bbwarn "useradd command did not succeed. Retrying..."\n\t\t\t       sleep 1\n\t\t       else\n\t\t\t       break\n\t\t       fi\n\t\t       count=`expr $count + 1`\n\t\t       if test $count = $retries; then\n\t\t\t\tbbfatal "Tried running useradd command $retries times without scucess, giving up"\n\t\t       fi\n\t       done\n\telse\n\t\tbbwarn "user $username already exists, not re-creating it"\n\tfi\n}\nperform_groupmems () {\n\tlocal rootdir="$1"\n\tlocal opts="$2"\n\tlocal retries="$3"\n\tbbnote "Performing groupmems with [$opts] and $retries times of retry"\n\tlocal groupname=`echo "$opts" | awk \'{ for (i = 1; i < NF; i++) if ($i == "-g" || $i == "--group") print $(i+1) }\'`\n\tlocal username=`echo "$opts" | awk \'{ for (i = 1; i < NF; i++) if ($i == "-a" || $i == "--add") print $(i+1) }\'`\n\tbbnote "Running groupmems command with group $groupname and user $username"\n\t# groupmems fails if /etc/gshadow does not exist\n\tlocal gshadow=""\n\tif [ -f $rootdir/etc/gshadow ]; then\n\t\tgshadow="yes"\n\telse\n\t\tgshadow="no"\n\t\ttouch $rootdir/etc/gshadow\n\tfi\n\tlocal mem_exists="`grep "^$groupname:[^:]*:[^:]*:\\([^,]*,\\)*$username\\(,[^,]*\\)*" $rootdir/etc/group || true`"\n\tif test "x$mem_exists" = "x"; then\n\t\tlocal count=0\n\t\twhile true; do\n\t\t\teval $PSEUDO groupmems $opts || true\n\t\t\tmem_exists="`grep "^$groupname:[^:]*:[^:]*:\\([^,]*,\\)*$username\\(,[^,]*\\)*" $rootdir/etc/group || true`"\n\t\t\tif test "x$mem_exists" = "x"; then\n\t\t\t\tbbwarn "groupmems command did not succeed. Retrying..."\n\t\t\t\tsleep 1\n\t\t\telse\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tcount=`expr $count + 1`\n\t\t\tif test $count = $retries; then\n\t\t\t\tif test "x$gshadow" = "xno"; then\n\t\t\t\t\trm -f $rootdir/etc/gshadow\n\t\t\t\t\trm -f $rootdir/etc/gshadow-\n\t\t\t\tfi\n\t\t\t\tbbfatal "Tried running groupmems command $retries times without scucess, giving up"\n\t\t\tfi\n\t\tdone\n\telse\n\t\tbbwarn "group $groupname already contains $username, not re-adding it"\n\tfi\n\tif test "x$gshadow" = "xno"; then\n\t\trm -f $rootdir/etc/gshadow\n\t\trm -f $rootdir/etc/gshadow-\n\tfi\n}\nOPT=""\nSYSROOT=""\n\nif test "x$D" != "x"; then\n\t# Installing into a sysroot\n\tSYSROOT="$D"\n\tOPT="--root $D"\n\n\t# Add groups and users defined for all recipe packages\n\tGROUPADD_PARAM="pulse"\n\tUSERADD_PARAM="--system --home /var/run/pulse                               --no-create-home --shell /bin/false                               --groups audio,pulse --gid pulse pulse"\n\tGROUPMEMS_PARAM=""\nelse\n\t# Installing onto a target\n\t# Add groups and users defined only for this package\n\tGROUPADD_PARAM="${GROUPADD_PARAM}"\n\tUSERADD_PARAM="${USERADD_PARAM}"\n\tGROUPMEMS_PARAM="${GROUPMEMS_PARAM}"\nfi\n\n# Perform group additions first, since user additions may depend\n# on these groups existing\nif test "x$GROUPADD_PARAM" != "x"; then\n\techo "Running groupadd commands..."\n\t# Invoke multiple instances of groupadd for parameter lists\n\t# separated by \';\'\n\topts=`echo "$GROUPADD_PARAM" | cut -d \';\' -f 1`\n\tremaining=`echo "$GROUPADD_PARAM" | cut -d \';\' -f 2-`\n\twhile test "x$opts" != "x"; do\n\t\tperform_groupadd "$SYSROOT" "$OPT $opts" 10\n\t\tif test "x$opts" = "x$remaining"; then\n\t\t\tbreak\n\t\tfi\n\t\topts=`echo "$remaining" | cut -d \';\' -f 1`\n\t\tremaining=`echo "$remaining" | cut -d \';\' -f 2-`\n\tdone\nfi\n\nif test "x$USERADD_PARAM" != "x"; then\n\techo "Running useradd commands..."\n\t# Invoke multiple instances of useradd for parameter lists\n\t# separated by \';\'\n\topts=`echo "$USERADD_PARAM" | cut -d \';\' -f 1`\n\tremaining=`echo "$USERADD_PARAM" | cut -d \';\' -f 2-`\n\twhile test "x$opts" != "x"; do\n\t\tperform_useradd "$SYSROOT" "$OPT $opts" 10\n\t\tif test "x$opts" = "x$remaining"; then\n\t\t\tbreak\n\t\tfi\n\t\topts=`echo "$remaining" | cut -d \';\' -f 1`\n\t\tremaining=`echo "$remaining" | cut -d \';\' -f 2-`\n\tdone\nfi\n\nif test "x$GROUPMEMS_PARAM" != "x"; then\n\techo "Running groupmems commands..."\n\t# Invoke multiple instances of groupmems for parameter lists\n\t# separated by \';\'\n\topts=`echo "$GROUPMEMS_PARAM" | cut -d \';\' -f 1`\n\tremaining=`echo "$GROUPMEMS_PARAM" | cut -d \';\' -f 2-`\n\twhile test "x$opts" != "x"; do\n\t\tperform_groupmems "$SYSROOT" "$OPT $opts" 10\n\t\tif test "x$opts" = "x$remaining"; then\n\t\t\tbreak\n\t\tfi\n\t\topts=`echo "$remaining" | cut -d \';\' -f 1`\n\t\tremaining=`echo "$remaining" | cut -d \';\' -f 2-`\n\tdone\nfi\n